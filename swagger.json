{
  "openapi": "3.0.0",
  "info": {
    "title": "Flash Proxy Reseller API",
    "version": "1.0"
  },
  "paths": {
    "/api/reseller/cities/{country_iso_or_id}": {
      "get": {
        "summary": "Retrieve cities",
        "description": "Returns a list of cities available for the specified proxy type, country, and state.",
        "parameters": [
          {
            "in": "path",
            "name": "country_iso_or_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Country ISO code for PREMIUM_RESIDENTIAL and RESIDENTIAL, or country ID for ISP_PRIVATE"
          },
          {
            "in": "query",
            "name": "state",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "State value for PREMIUM_RESIDENTIAL and RESIDENTIAL, or state ID for ISP_PRIVATE"
          },
          {
            "in": "query",
            "name": "proxy_type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PREMIUM_RESIDENTIAL", "RESIDENTIAL", "ISP_PRIVATE"]
            },
            "description": "Type of proxy to get cities for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of cities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "state_name": {
                        "type": "string"
                      },
                      "country_iso2": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Country ISO or ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reseller/countries": {
      "get": {
        "summary": "Retrieve countries",
        "description": "Returns a list of countries available for the specified proxy type.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          },
          {
            "in": "query",
            "name": "proxyType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["premium_residential", "residential"]
            },
            "description": "Type of proxy to get countries for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of countries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "iso2": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid proxy type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid proxy type"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No API key provided"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reseller/me": {
      "get": {
        "description": "Retrieves the current reseller's balance.",
        "summary": "Current balance",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the balance of the authenticated reseller.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number",
                      "example": 1000
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API key provided or Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": {
                        "missingKey": {
                          "value": "No API key provided"
                        },
                        "invalidKey": {
                          "value": "Invalid API key"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reseller/products": {
      "get": {
        "summary": "Get all products",
        "description": "Returns a list of all reseller products available in the system.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerProduct"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No API key provided"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reseller/states/{country_iso}": {
      "get": {
        "summary": "Retrieve states for a country",
        "description": "Returns a list of states available for the specified proxy type and country.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          },
          {
            "in": "path",
            "name": "country_iso",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Country ISO2 code"
          },
          {
            "in": "query",
            "name": "proxy_type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PREMIUM_RESIDENTIAL", "RESIDENTIAL", "ISP_PRIVATE"]
            },
            "description": "Type of proxy to get states for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of states",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "iso2": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid proxy type"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reseller/sub-user/{sub_user_id}/purchase": {
      "post": {
        "summary": "Purchase a proxy plan",
        "description": "Allows a reseller to purchase a proxy plan for a specific sub-user.",
        "tags": ["Sub-User", "Purchase"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          },
          {
            "in": "path",
            "name": "sub_user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the sub-user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type", "quantity"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RESIDENTIAL",
                      "PREMIUM_RESIDENTIAL",
                      "ISP_PRIVATE"
                    ]
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "region": {
                    "type": "string",
                    "enum": ["DE", "UK", "US", "AU"]
                  },
                  "duration": {
                    "type": "string",
                    "enum": ["MONTHLY", "QUATERLY", "SEMI-ANNUALLY", "ANNUALLY"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully purchased the plan",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validation error or insufficient balance)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "object"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (no API key or invalid API key)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found (sub-user or product not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error (failed to update bandwidth)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reseller/sub-user/{sub_user_id}/remove-plan/{plan_id}": {
      "delete": {
        "summary": "Remove a plan",
        "description": "Removes a plan associated with a specific sub-user and archives it in the database.",
        "tags": ["Sub-User", "Plan"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          },
          {
            "in": "path",
            "name": "sub_user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the sub-user"
          },
          {
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the plan to be removed"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the plan",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (plan does not belong to sub-user)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (no API key or invalid API key)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found (sub-user or plan not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reseller/sub-user/{sub_user_id}": {
      "get": {
        "summary": "Retrieve a specific sub-user",
        "description": "Fetches details of a specific sub-user, including their active plans, and updates plan information from ProxyForge.",
        "tags": ["Sub-User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          },
          {
            "in": "path",
            "name": "sub_user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the sub-user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved and updated sub-user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "proxy_password": {
                          "type": "string"
                        },
                        "proxy_username": {
                          "type": "string"
                        },
                        "plans": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "end_date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "start_date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "max_bytes": {
                                "type": "string"
                              },
                              "bytes_used": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "product_id": {
                                "type": "string"
                              },
                              "proxy_type": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "proxyList": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (no API key or invalid API key)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Sub-user not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error (failed to fetch or update plan data)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reseller/sub-user": {
      "post": {
        "summary": "Create a new sub-user",
        "description": "Creates a new sub-user with the provided details.",
        "tags": ["Sub-User"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "username", "password", "email"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created sub-user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "proxy_data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validation error or existing sub-user)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "object"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (no API key or invalid API key)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve all sub-users",
        "description": "Retrieves all sub-users associated with the authenticated user.",
        "tags": ["Sub-User"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication (Bearer token)"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved sub-users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "sub_users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "proxy_password": {
                            "type": "string"
                          },
                          "proxy_username": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (no API key or invalid API key)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ResellerProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier for the product"
          },
          "name": {
            "type": "string",
            "description": "The name of the product"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "The price of the product"
          },
          "type": {
            "type": "string",
            "enum": ["RESIDENTIAL", "PREMIUM_RESIDENTIAL", "ISP_PRIVATE"],
            "description": "The type of proxy product"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": []
}
